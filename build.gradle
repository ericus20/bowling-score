
buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'pmd'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.interview.bowling'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    // Webjars
    compile('org.webjars:bootstrap:4.1.3')
    compile('org.webjars:jquery:3.3.1-1')
    compile('org.webjars:webjars-locator:0.34')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

// Gradle wrapper will be supported adn provided if no Gradle is found locally
wrapper {
    gradleVersion = '4.10.2'
}

tasks.withType(Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle.xml")
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        xml.enabled = false
        html.enabled = true
    }

    classpath = files()
}

tasks.withType(FindBugs) {
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
